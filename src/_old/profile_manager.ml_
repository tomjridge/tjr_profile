(** Provide support for accessing profilers by name *)

let default_timer = 
  let f () = 
    Printf.printf "%s: default_timer not initialized\n%!" __FILE__;
    0
  in
  ref f

module Internal = struct

  open Types_and_core

  let _profilers : (string,prof_ops) Hashtbl.t = Hashtbl.create 100

  module H = Hashtbl

  let default_timer = Types_and_core.default_timer

  let register_profiler ~name ~profiler = H.add _profilers name profiler

  let get_profiler ~name = H.find_opt name _profilers 

  let create_profiler ~name =
    let profiler = mk_profiler ~now:(!default_timer) in
    register_profiler ~name ~profiler;
    profiler

end



(*
old

  let get_mark ~name =
    get_profiler ~name |> function
    | None -> 
      let profiler = mk_profiler ~now:(!now) in
      register_profiler ~name ~profiler;
      profiler.mark
    | Some profiler ->
      profiler.mark
*)
